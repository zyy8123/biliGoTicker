// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: proto/master.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WorkerInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	WorkStatus    int32                  `protobuf:"varint,3,opt,name=workStatus,proto3" json:"workStatus,omitempty"`    // "Idle", "Working", "Risking"
	TaskAssigned  string                 `protobuf:"bytes,4,opt,name=TaskAssigned,proto3" json:"TaskAssigned,omitempty"` //Task id
	TaskStatus    string                 `protobuf:"bytes,5,opt,name=taskStatus,proto3" json:"taskStatus,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerInfo) Reset() {
	*x = WorkerInfo{}
	mi := &file_proto_master_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerInfo) ProtoMessage() {}

func (x *WorkerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_master_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerInfo.ProtoReflect.Descriptor instead.
func (*WorkerInfo) Descriptor() ([]byte, []int) {
	return file_proto_master_proto_rawDescGZIP(), []int{0}
}

func (x *WorkerInfo) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *WorkerInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *WorkerInfo) GetWorkStatus() int32 {
	if x != nil {
		return x.WorkStatus
	}
	return 0
}

func (x *WorkerInfo) GetTaskAssigned() string {
	if x != nil {
		return x.TaskAssigned
	}
	return ""
}

func (x *WorkerInfo) GetTaskStatus() string {
	if x != nil {
		return x.TaskStatus
	}
	return ""
}

type RegisterReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterReply) Reset() {
	*x = RegisterReply{}
	mi := &file_proto_master_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterReply) ProtoMessage() {}

func (x *RegisterReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_master_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterReply.ProtoReflect.Descriptor instead.
func (*RegisterReply) Descriptor() ([]byte, []int) {
	return file_proto_master_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CancelTaskInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CancelTaskId  string                 `protobuf:"bytes,1,opt,name=cancelTaskId,proto3" json:"cancelTaskId,omitempty"` //
	WorkerId      string                 `protobuf:"bytes,2,opt,name=workerId,proto3" json:"workerId,omitempty"`
	WorkStatus    int32                  `protobuf:"varint,3,opt,name=workStatus,proto3" json:"workStatus,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelTaskInfo) Reset() {
	*x = CancelTaskInfo{}
	mi := &file_proto_master_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelTaskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTaskInfo) ProtoMessage() {}

func (x *CancelTaskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_master_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelTaskInfo.ProtoReflect.Descriptor instead.
func (*CancelTaskInfo) Descriptor() ([]byte, []int) {
	return file_proto_master_proto_rawDescGZIP(), []int{2}
}

func (x *CancelTaskInfo) GetCancelTaskId() string {
	if x != nil {
		return x.CancelTaskId
	}
	return ""
}

func (x *CancelTaskInfo) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *CancelTaskInfo) GetWorkStatus() int32 {
	if x != nil {
		return x.WorkStatus
	}
	return 0
}

type CancelReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelReply) Reset() {
	*x = CancelReply{}
	mi := &file_proto_master_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelReply) ProtoMessage() {}

func (x *CancelReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_master_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelReply.ProtoReflect.Descriptor instead.
func (*CancelReply) Descriptor() ([]byte, []int) {
	return file_proto_master_proto_rawDescGZIP(), []int{3}
}

func (x *CancelReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CancelReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_master_proto protoreflect.FileDescriptor

const file_proto_master_proto_rawDesc = "" +
	"\n" +
	"\x12proto/master.proto\x12\x06worker\"\xa7\x01\n" +
	"\n" +
	"WorkerInfo\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12\x1e\n" +
	"\n" +
	"workStatus\x18\x03 \x01(\x05R\n" +
	"workStatus\x12\"\n" +
	"\fTaskAssigned\x18\x04 \x01(\tR\fTaskAssigned\x12\x1e\n" +
	"\n" +
	"taskStatus\x18\x05 \x01(\tR\n" +
	"taskStatus\"C\n" +
	"\rRegisterReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"p\n" +
	"\x0eCancelTaskInfo\x12\"\n" +
	"\fcancelTaskId\x18\x01 \x01(\tR\fcancelTaskId\x12\x1a\n" +
	"\bworkerId\x18\x02 \x01(\tR\bworkerId\x12\x1e\n" +
	"\n" +
	"workStatus\x18\x03 \x01(\x05R\n" +
	"workStatus\"A\n" +
	"\vCancelReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\x86\x01\n" +
	"\fTicketMaster\x12;\n" +
	"\x0eRegisterWorker\x12\x12.worker.WorkerInfo\x1a\x15.worker.RegisterReply\x129\n" +
	"\n" +
	"CancelTask\x12\x16.worker.CancelTaskInfo\x1a\x13.worker.CancelReplyB\x17Z\x15internal/master/pb;pbb\x06proto3"

var (
	file_proto_master_proto_rawDescOnce sync.Once
	file_proto_master_proto_rawDescData []byte
)

func file_proto_master_proto_rawDescGZIP() []byte {
	file_proto_master_proto_rawDescOnce.Do(func() {
		file_proto_master_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_master_proto_rawDesc), len(file_proto_master_proto_rawDesc)))
	})
	return file_proto_master_proto_rawDescData
}

var file_proto_master_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_master_proto_goTypes = []any{
	(*WorkerInfo)(nil),     // 0: worker.WorkerInfo
	(*RegisterReply)(nil),  // 1: worker.RegisterReply
	(*CancelTaskInfo)(nil), // 2: worker.CancelTaskInfo
	(*CancelReply)(nil),    // 3: worker.CancelReply
}
var file_proto_master_proto_depIdxs = []int32{
	0, // 0: worker.TicketMaster.RegisterWorker:input_type -> worker.WorkerInfo
	2, // 1: worker.TicketMaster.CancelTask:input_type -> worker.CancelTaskInfo
	1, // 2: worker.TicketMaster.RegisterWorker:output_type -> worker.RegisterReply
	3, // 3: worker.TicketMaster.CancelTask:output_type -> worker.CancelReply
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_master_proto_init() }
func file_proto_master_proto_init() {
	if File_proto_master_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_master_proto_rawDesc), len(file_proto_master_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_master_proto_goTypes,
		DependencyIndexes: file_proto_master_proto_depIdxs,
		MessageInfos:      file_proto_master_proto_msgTypes,
	}.Build()
	File_proto_master_proto = out.File
	file_proto_master_proto_goTypes = nil
	file_proto_master_proto_depIdxs = nil
}
